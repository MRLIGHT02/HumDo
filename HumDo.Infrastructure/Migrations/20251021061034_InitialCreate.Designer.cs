// <auto-generated />
using System;
using HumDo.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HumDo.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251021061034_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("
                
                ._event", b =>
                {
                    b.Property<Guid>("event_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("event_type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("event_id")
                        .HasName("PK__events__2370F72781499A64");

                    b.ToTable("events");
                });

            modelBuilder.Entity("
                
                
                
                .admin_action", b =>
                {
                    b.Property<long>("action_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("action_id"));

                    b.Property<string>("action_type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("admin_user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("performed_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid?>("target_user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("action_id")
                        .HasName("PK__admin_ac__74EFC21719890747");

                    b.HasIndex("target_user_id");

                    b.ToTable("admin_actions");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.api_key", b =>
                {
                    b.Property<Guid>("key_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<DateTimeOffset?>("expires_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("key_hash")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("owner")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("scopes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("key_id")
                        .HasName("PK__api_keys__97DF9ACD3129DC15");

                    b.ToTable("api_keys");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.app_config", b =>
                {
                    b.Property<int>("config_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("config_id"));

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("env")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("config_id")
                        .HasName("PK__app_conf__4AD1BFF1244FD124");

                    b.ToTable("app_config", (string)null);
                });

            modelBuilder.Entity("HumDo.Domain.Entities.audit_log", b =>
                {
                    b.Property<long>("audit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("audit_id"));

                    b.Property<string>("action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("entity_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("entity_table")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("performed_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("performed_by")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("audit_id")
                        .HasName("PK__audit_lo__5AF33E33035F174E");

                    b.ToTable("audit_logs");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.block", b =>
                {
                    b.Property<Guid>("blocker_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("blocked_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("blocked_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("blocker_id", "blocked_id")
                        .HasName("PK__blocks__638690F3DE6E6612");

                    b.HasIndex("blocked_id");

                    b.ToTable("blocks");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.boost", b =>
                {
                    b.Property<Guid>("boost_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("boost_type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("expires_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("started_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("boost_id")
                        .HasName("PK__boosts__F709BD14A4627334");

                    b.HasIndex("user_id");

                    b.ToTable("boosts");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.boost_session", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTimeOffset?>("activated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<bool?>("consumed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("duration_seconds")
                        .HasColumnType("int");

                    b.Property<string>("source")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__boost_se__3213E83F3CAFAE18");

                    b.HasIndex("user_id");

                    b.ToTable("boost_sessions");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.conversation", b =>
                {
                    b.Property<Guid>("conversation_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("is_match_based")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("match_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("conversation_id")
                        .HasName("PK__conversa__311E7E9A41874F11");

                    b.HasIndex("created_by");

                    b.HasIndex("match_id");

                    b.ToTable("conversations");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.conversation_participant", b =>
                {
                    b.Property<Guid>("conversation_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("is_muted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("joined_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<DateTimeOffset?>("left_at")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("conversation_id", "user_id")
                        .HasName("PK__conversa__DA859DEA1599C0DC");

                    b.HasIndex("user_id");

                    b.ToTable("conversation_participants");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.daily_user_metric", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int?>("logins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("matches_created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("messages_sent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateOnly?>("metric_date")
                        .HasColumnType("date");

                    b.Property<int?>("swipes_received")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("swipes_sent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__daily_us__3213E83FFA7D6F41");

                    b.HasIndex("user_id");

                    b.ToTable("daily_user_metrics");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.device_fingerprint", b =>
                {
                    b.Property<Guid>("fingerprint_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("fingerprint_hash")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTimeOffset?>("first_seen_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<DateTimeOffset?>("last_seen_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("fingerprint_id")
                        .HasName("PK__device_f__0695674677BB9D7A");

                    b.HasIndex("user_id");

                    b.ToTable("device_fingerprints");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.discount_code", b =>
                {
                    b.Property<string>("code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset?>("expires_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("max_uses")
                        .HasColumnType("int");

                    b.Property<short?>("percent_off")
                        .HasColumnType("smallint");

                    b.HasKey("code")
                        .HasName("PK__discount__357D4CF8EB6E96AA");

                    b.ToTable("discount_codes");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.email_log", b =>
                {
                    b.Property<long>("email_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("email_id"));

                    b.Property<string>("body_snippet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provider_response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("sent_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("subject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("to_address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("email_id")
                        .HasName("PK__email_lo__3FEF87660E08C44E");

                    b.HasIndex("user_id");

                    b.ToTable("email_logs");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.feature_event", b =>
                {
                    b.Property<long>("event_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("event_id"));

                    b.Property<string>("context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("feature_key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("occurred_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("event_id")
                        .HasName("PK__feature___2370F727F396B1B9");

                    b.HasIndex("user_id");

                    b.ToTable("feature_events");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.gender", b =>
                {
                    b.Property<int>("gender_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gender_id"));

                    b.Property<string>("display_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("gender_id")
                        .HasName("PK__genders__9DF18F87CB3545E9");

                    b.HasIndex(new[] { "key" }, "UQ__genders__DFD83CAF107A7DE4")
                        .IsUnique();

                    b.ToTable("genders");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.interest", b =>
                {
                    b.Property<int>("interest_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("interest_id"));

                    b.Property<string>("category")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.HasKey("interest_id")
                        .HasName("PK__interest__0F5A1FAD9646BB75");

                    b.HasIndex(new[] { "name" }, "UQ__interest__72E12F1B1EA85E85")
                        .IsUnique();

                    b.ToTable("interests");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.invoice", b =>
                {
                    b.Property<Guid>("invoice_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("amount_cents")
                        .HasColumnType("bigint");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("issued_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<DateTimeOffset?>("paid_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("transaction_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("invoice_id")
                        .HasName("PK__invoices__F58DFD49F5406A97");

                    b.HasIndex("transaction_id");

                    b.HasIndex("user_id");

                    b.ToTable("invoices");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.ip_reputation", b =>
                {
                    b.Property<string>("ip_address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("last_checked_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("score")
                        .HasColumnType("float");

                    b.HasKey("ip_address")
                        .HasName("PK__ip_reput__5376BCC5DA9F0E03");

                    b.ToTable("ip_reputation", (string)null);
                });

            modelBuilder.Entity("HumDo.Domain.Entities.language", b =>
                {
                    b.Property<int>("language_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("language_id"));

                    b.Property<string>("iso_code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("language_id")
                        .HasName("PK__language__804CF6B370F6169C");

                    b.HasIndex(new[] { "iso_code" }, "UQ__language__153DD4A67C4A68AC")
                        .IsUnique()
                        .HasFilter("[iso_code] IS NOT NULL");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.location", b =>
                {
                    b.Property<long>("location_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("location_id"));

                    b.Property<int?>("accuracy_meters")
                        .HasColumnType("int");

                    b.Property<double?>("latitude")
                        .HasColumnType("float");

                    b.Property<double?>("longitude")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset?>("recorded_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("location_id")
                        .HasName("PK__location__771831EA3EFE9E31");

                    b.HasIndex("user_id");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.login_attempt", b =>
                {
                    b.Property<long>("attempt_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("attempt_id"));

                    b.Property<DateTimeOffset?>("attempted_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("failure_reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ip_address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("user_agent")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("was_successful")
                        .HasColumnType("bit");

                    b.HasKey("attempt_id")
                        .HasName("PK__login_at__5621F949F402D3A6");

                    b.HasIndex("user_id");

                    b.ToTable("login_attempts");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.match", b =>
                {
                    b.Property<Guid>("match_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<bool?>("is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("mutual_swipe_window")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("user_a")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("user_b")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("match_id")
                        .HasName("PK__matches__9D7FCBA35C4052A6");

                    b.HasIndex("user_a");

                    b.HasIndex("user_b");

                    b.ToTable("matches");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.match_score", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<Guid>("candidate_user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("computed_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("model_version")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("score")
                        .HasColumnType("float");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__match_sc__3213E83F75DC88FB");

                    b.HasIndex("candidate_user_id");

                    b.HasIndex("user_id");

                    b.ToTable("match_scores");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.media_file", b =>
                {
                    b.Property<Guid>("media_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("file_name")
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mime_type")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("owner_user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("size_bytes")
                        .HasColumnType("bigint");

                    b.Property<string>("storage_key")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("media_id")
                        .HasName("PK__media_fi__D0A840F4DEAAA6D9");

                    b.HasIndex("owner_user_id");

                    b.ToTable("media_files");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message", b =>
                {
                    b.Property<Guid>("message_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("conversation_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("edited_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("is_deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("sender_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("sent_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("message_id")
                        .HasName("PK__messages__0BBF6EE60C84DBE0");

                    b.HasIndex("conversation_id");

                    b.HasIndex("sender_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message_attachment", b =>
                {
                    b.Property<Guid>("attachment_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("attachment_type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid>("media_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("message_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("attachment_id")
                        .HasName("PK__message___B74DF4E23E5FE82B");

                    b.HasIndex("media_id");

                    b.HasIndex("message_id");

                    b.ToTable("message_attachments");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message_reaction", b =>
                {
                    b.Property<Guid>("message_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("reactor_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("reaction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("reacted_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("message_id", "reactor_id", "reaction")
                        .HasName("PK__message___AB3D133EC3C3B4B3");

                    b.HasIndex("reactor_id");

                    b.ToTable("message_reactions");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message_seen_event", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<Guid>("message_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("seen_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__message___3213E83FF80D6A82");

                    b.HasIndex("message_id");

                    b.HasIndex("user_id");

                    b.ToTable("message_seen_events");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.metrics_aggregate", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("metric_date")
                        .HasColumnType("date");

                    b.Property<string>("metric_name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("value")
                        .HasColumnType("float");

                    b.HasKey("id")
                        .HasName("PK__metrics___3213E83F6CFDD11D");

                    b.ToTable("metrics_aggregates");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.moderation_note", b =>
                {
                    b.Property<long>("note_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("note_id"));

                    b.Property<Guid?>("admin_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("note_id")
                        .HasName("PK__moderati__CEDD0FA48813711E");

                    b.HasIndex("user_id");

                    b.ToTable("moderation_notes");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.notification", b =>
                {
                    b.Property<Guid>("notification_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<bool?>("is_read")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("notification_id")
                        .HasName("PK__notifica__E059842F51D92713");

                    b.HasIndex("user_id");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.notification_object", b =>
                {
                    b.Property<Guid>("notification_object_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid?>("entity_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("entity_type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("notification_object_id")
                        .HasName("PK__notifica__F142996CD8E6C5D9");

                    b.ToTable("notification_objects");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.password_reset", b =>
                {
                    b.Property<Guid>("reset_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("expires_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("requested_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("reset_token")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<DateTimeOffset?>("used_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("reset_id")
                        .HasName("PK__password__40FB05204707803C");

                    b.HasIndex("user_id");

                    b.ToTable("password_resets");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.plan", b =>
                {
                    b.Property<int>("plan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("plan_id"));

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("currency")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<string>("display_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plan_key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("price_cents")
                        .HasColumnType("bigint");

                    b.HasKey("plan_id")
                        .HasName("PK__plans__BE9F8F1D188F583B");

                    b.HasIndex(new[] { "plan_key" }, "UQ__plans__BCFA19D71B7CFEF0")
                        .IsUnique();

                    b.ToTable("plans");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.push_token", b =>
                {
                    b.Property<Guid>("token_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("device_model")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("last_seen_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("platform")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("token")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("token_id")
                        .HasName("PK__push_tok__CB3C9E1731E47540");

                    b.HasIndex("user_id");

                    b.ToTable("push_tokens");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.rate_limit", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("limit_count")
                        .HasColumnType("int");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("window_seconds")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK__rate_lim__3213E83F077AF42B");

                    b.HasIndex("user_id");

                    b.ToTable("rate_limits");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.relationship_type", b =>
                {
                    b.Property<int>("relationship_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("relationship_type_id"));

                    b.Property<string>("display_name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("relationship_type_id")
                        .HasName("PK__relation__D9975703154C668B");

                    b.HasIndex(new[] { "key" }, "UQ__relation__DFD83CAF16D261A6")
                        .IsUnique();

                    b.ToTable("relationship_types");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.report", b =>
                {
                    b.Property<Guid>("report_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("evidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("report_reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("reported_message_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("reported_user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("reporter_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("open");

                    b.HasKey("report_id")
                        .HasName("PK__reports__779B7C5820F9B631");

                    b.HasIndex("reported_message_id");

                    b.HasIndex("reported_user_id");

                    b.HasIndex("reporter_id");

                    b.ToTable("reports");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.report_review", b =>
                {
                    b.Property<long>("review_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("review_id"));

                    b.Property<string>("action_taken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("report_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("reviewed_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid?>("reviewer_admin_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("review_id")
                        .HasName("PK__report_r__60883D9033C7AE15");

                    b.HasIndex("report_id");

                    b.ToTable("report_reviews");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.setting", b =>
                {
                    b.Property<string>("setting_key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("setting_key")
                        .HasName("PK__settings__0DFAC42644B05440");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.sms_log", b =>
                {
                    b.Property<long>("sms_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("sms_id"));

                    b.Property<string>("message_snippet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provider_response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("sent_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("to_number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("sms_id")
                        .HasName("PK__sms_logs__72F6EB0E2B2ECA2C");

                    b.HasIndex("user_id");

                    b.ToTable("sms_logs");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.storage_provider", b =>
                {
                    b.Property<int>("provider_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("provider_id"));

                    b.Property<string>("config")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("provider_id")
                        .HasName("PK__storage___00E2131037BB6099");

                    b.ToTable("storage_providers");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.subscription", b =>
                {
                    b.Property<Guid>("subscription_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("auto_renew")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset?>("expires_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("plan_id")
                        .HasColumnType("int");

                    b.Property<string>("provider_subscription_id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset?>("started_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("subscription_id")
                        .HasName("PK__subscrip__863A7EC186F0AAB9");

                    b.HasIndex("plan_id");

                    b.HasIndex("user_id");

                    b.ToTable("subscriptions");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.swipe", b =>
                {
                    b.Property<Guid>("swipe_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<short?>("direction")
                        .HasColumnType("smallint");

                    b.Property<string>("source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("swipee_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("swiper_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("swipe_id")
                        .HasName("PK__swipes__07A502BBD549FCF6");

                    b.HasIndex("swipee_id");

                    b.HasIndex("swiper_id");

                    b.ToTable("swipes");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.swipe_event", b =>
                {
                    b.Property<long>("event_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("event_id"));

                    b.Property<DateTimeOffset?>("event_time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("event_type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("swipe_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("event_id")
                        .HasName("PK__swipe_ev__2370F727CEAE44DC");

                    b.HasIndex("swipe_id");

                    b.ToTable("swipe_events");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.third_party_integration", b =>
                {
                    b.Property<int>("integration_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("integration_id"));

                    b.Property<string>("config")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<bool?>("enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("integration_id")
                        .HasName("PK__third_pa__B403D8878D1EF0BD");

                    b.ToTable("third_party_integrations");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.transaction", b =>
                {
                    b.Property<Guid>("transaction_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("amount_cents")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("currency")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<string>("payment_provider")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("provider_txn_id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("transaction_id")
                        .HasName("PK__transact__85C600AF2A2584F8");

                    b.HasIndex("user_id");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.trust_score", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("factors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("last_computed_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("user_id")
                        .HasName("PK__trust_sc__B9BE370F0C97D55A");

                    b.ToTable("trust_scores");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user", b =>
                {
                    b.Property<Guid>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("is_deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("is_email_confirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("is_phone_confirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("last_login_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<double?>("popularity_score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("user_id")
                        .HasName("PK__users__B9BE370FDE77C485");

                    b.HasIndex(new[] { "email" }, "UQ__users__AB6E616486528199")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_flag", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("flag_data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flag_type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__user_fla__3213E83FA93E0300");

                    b.HasIndex("user_id");

                    b.ToTable("user_flags");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_interest", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("interest_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("added_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("user_id", "interest_id");

                    b.HasIndex("interest_id");

                    b.ToTable("user_interests");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_language", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("language_id")
                        .HasColumnType("int");

                    b.Property<short?>("fluency_level")
                        .HasColumnType("smallint");

                    b.HasKey("user_id", "language_id");

                    b.HasIndex("language_id");

                    b.ToTable("user_languages");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_photo", b =>
                {
                    b.Property<Guid>("photo_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("height")
                        .HasColumnType("int");

                    b.Property<bool?>("is_active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("is_primary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("storage_key")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTimeOffset?>("uploaded_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("url")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("width")
                        .HasColumnType("int");

                    b.HasKey("photo_id")
                        .HasName("PK__user_pho__CB48C83D47F1B958");

                    b.HasIndex("user_id");

                    b.ToTable("user_photos");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_preference", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short?>("max_age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)99);

                    b.Property<int?>("max_distance_km")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<short?>("min_age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)18);

                    b.Property<bool?>("only_verified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("preferred_gender_ids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("preferred_relationship_ids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("user_id")
                        .HasName("PK__user_pre__B9BE370F38E8C3AC");

                    b.ToTable("user_preferences");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_profile", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("about")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateOnly?>("birthdate")
                        .HasColumnType("date");

                    b.Property<string>("city")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("display_name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("gender_id")
                        .HasColumnType("int");

                    b.Property<short?>("height_cm")
                        .HasColumnType("smallint");

                    b.Property<DateTimeOffset?>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("user_id")
                        .HasName("PK__user_pro__B9BE370FEB38FFD1");

                    b.HasIndex("gender_id");

                    b.ToTable("user_profiles");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_session", b =>
                {
                    b.Property<Guid>("session_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("device_info")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTimeOffset?>("expires_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ip_address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("is_revoked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("revoked_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("session_id")
                        .HasName("PK__user_ses__69B13FDC180D6763");

                    b.HasIndex("user_id");

                    b.ToTable("user_sessions");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_social_link", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTimeOffset?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("external_user_id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("provider")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("url")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK__user_soc__3213E83F80283195");

                    b.HasIndex("user_id");

                    b.ToTable("user_social_links");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_verification", b =>
                {
                    b.Property<Guid>("verification_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("method")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("requested_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("verified_at")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("verification_id")
                        .HasName("PK__user_ver__24F179691350CCE9");

                    b.HasIndex("user_id");

                    b.ToTable("user_verifications");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.webhook_log", b =>
                {
                    b.Property<long>("webhook_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("webhook_id"));

                    b.Property<DateTimeOffset?>("delivered_at")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("integration_id")
                        .HasColumnType("int");

                    b.Property<string>("payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status_code")
                        .HasColumnType("int");

                    b.HasKey("webhook_id")
                        .HasName("PK__webhook___895D8FC70F0B29E7");

                    b.HasIndex("integration_id");

                    b.ToTable("webhook_logs");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.admin_action", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "target_user")
                        .WithMany("admin_actions")
                        .HasForeignKey("target_user_id")
                        .HasConstraintName("FK__admin_act__targe__19AACF41");

                    b.Navigation("target_user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.block", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "blocked")
                        .WithMany("blockblockeds")
                        .HasForeignKey("blocked_id")
                        .IsRequired()
                        .HasConstraintName("FK__blocks__blocked___55009F39");

                    b.HasOne("HumDo.Domain.Entities.user", "blocker")
                        .WithMany("blockblockers")
                        .HasForeignKey("blocker_id")
                        .IsRequired()
                        .HasConstraintName("FK__blocks__blocker___540C7B00");

                    b.Navigation("blocked");

                    b.Navigation("blocker");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.boost", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("boosts")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__boosts__user_id__04AFB25B");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.boost_session", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("boost_sessions")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__boost_ses__user___0880433F");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.conversation", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "created_byNavigation")
                        .WithMany("conversations")
                        .HasForeignKey("created_by")
                        .HasConstraintName("FK__conversat__creat__3587F3E0");

                    b.HasOne("HumDo.Domain.Entities.match", "match")
                        .WithMany("conversations")
                        .HasForeignKey("match_id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__conversat__match__3493CFA7");

                    b.Navigation("created_byNavigation");

                    b.Navigation("match");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.conversation_participant", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.conversation", "conversation")
                        .WithMany("conversation_participants")
                        .HasForeignKey("conversation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__conversat__conve__3A4CA8FD");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("conversation_participants")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__conversat__user___3B40CD36");

                    b.Navigation("conversation");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.daily_user_metric", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("daily_user_metrics")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__daily_use__user___24285DB4");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.device_fingerprint", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("device_fingerprints")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__device_fi__user___4959E263");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.email_log", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("email_logs")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK__email_log__user___4E1E9780");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.feature_event", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("feature_events")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__feature_e__user___2BC97F7C");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.invoice", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.transaction", "transaction")
                        .WithMany("invoices")
                        .HasForeignKey("transaction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__invoices__transa__7D0E9093");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("invoices")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("FK__invoices__user_i__7E02B4CC");

                    b.Navigation("transaction");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.location", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("locations")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_locations_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.login_attempt", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("login_attempts")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK_login_attempts_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.match", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user_aNavigation")
                        .WithMany("matchuser_aNavigations")
                        .HasForeignKey("user_a")
                        .IsRequired()
                        .HasConstraintName("FK__matches__user_a__29221CFB");

                    b.HasOne("HumDo.Domain.Entities.user", "user_bNavigation")
                        .WithMany("matchuser_bNavigations")
                        .HasForeignKey("user_b")
                        .IsRequired()
                        .HasConstraintName("FK__matches__user_b__2A164134");

                    b.Navigation("user_aNavigation");

                    b.Navigation("user_bNavigation");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.match_score", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "candidate_user")
                        .WithMany("match_scorecandidate_users")
                        .HasForeignKey("candidate_user_id")
                        .IsRequired()
                        .HasConstraintName("FK__match_sco__candi__2FCF1A8A");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("match_scoreusers")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("FK__match_sco__user___2EDAF651");

                    b.Navigation("candidate_user");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.media_file", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "owner_user")
                        .WithMany("media_files")
                        .HasForeignKey("owner_user_id")
                        .HasConstraintName("FK_media_files_users");

                    b.Navigation("owner_user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.conversation", "conversation")
                        .WithMany("messages")
                        .HasForeignKey("conversation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__messages__conver__40058253");

                    b.HasOne("HumDo.Domain.Entities.user", "sender")
                        .WithMany("messages")
                        .HasForeignKey("sender_id")
                        .IsRequired()
                        .HasConstraintName("FK__messages__sender__40F9A68C");

                    b.Navigation("conversation");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message_attachment", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.media_file", "media")
                        .WithMany("message_attachments")
                        .HasForeignKey("media_id")
                        .IsRequired()
                        .HasConstraintName("FK__message_a__media__46B27FE2");

                    b.HasOne("HumDo.Domain.Entities.message", "message")
                        .WithMany("message_attachments")
                        .HasForeignKey("message_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__message_a__messa__45BE5BA9");

                    b.Navigation("media");

                    b.Navigation("message");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message_reaction", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.message", "message")
                        .WithMany("message_reactions")
                        .HasForeignKey("message_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__message_r__messa__4A8310C6");

                    b.HasOne("HumDo.Domain.Entities.user", "reactor")
                        .WithMany("message_reactions")
                        .HasForeignKey("reactor_id")
                        .IsRequired()
                        .HasConstraintName("FK__message_r__react__4B7734FF");

                    b.Navigation("message");

                    b.Navigation("reactor");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message_seen_event", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.message", "message")
                        .WithMany("message_seen_events")
                        .HasForeignKey("message_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__message_s__messa__4F47C5E3");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("message_seen_events")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("FK__message_s__user___503BEA1C");

                    b.Navigation("message");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.moderation_note", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("moderation_notes")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__moderatio__user___2057CCD0");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.notification", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("notifications")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__notificat__user___0E391C95");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.password_reset", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("password_resets")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_password_resets_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.push_token", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("push_tokens")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__push_toke__user___15DA3E5D");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.rate_limit", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("rate_limits")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK__rate_limi__user___4589517F");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.report", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.message", "reported_message")
                        .WithMany("reports")
                        .HasForeignKey("reported_message_id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__reports__reporte__5AB9788F");

                    b.HasOne("HumDo.Domain.Entities.user", "reported_user")
                        .WithMany("reportreported_users")
                        .HasForeignKey("reported_user_id")
                        .IsRequired()
                        .HasConstraintName("FK__reports__reporte__59C55456");

                    b.HasOne("HumDo.Domain.Entities.user", "reporter")
                        .WithMany("reportreporters")
                        .HasForeignKey("reporter_id")
                        .IsRequired()
                        .HasConstraintName("FK__reports__reporte__58D1301D");

                    b.Navigation("reported_message");

                    b.Navigation("reported_user");

                    b.Navigation("reporter");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.report_review", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.report", "report")
                        .WithMany("report_reviews")
                        .HasForeignKey("report_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__report_re__repor__5F7E2DAC");

                    b.Navigation("report");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.sms_log", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("sms_logs")
                        .HasForeignKey("user_id")
                        .HasConstraintName("FK__sms_logs__user_i__50FB042B");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.subscription", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.plan", "plan")
                        .WithMany("subscriptions")
                        .HasForeignKey("plan_id")
                        .IsRequired()
                        .HasConstraintName("FK__subscript__plan___73852659");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("subscriptions")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__subscript__user___72910220");

                    b.Navigation("plan");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.swipe", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "swipee")
                        .WithMany("swipeswipees")
                        .HasForeignKey("swipee_id")
                        .IsRequired()
                        .HasConstraintName("FK__swipes__swipee_i__2180FB33");

                    b.HasOne("HumDo.Domain.Entities.user", "swiper")
                        .WithMany("swipeswipers")
                        .HasForeignKey("swiper_id")
                        .IsRequired()
                        .HasConstraintName("FK__swipes__swiper_i__208CD6FA");

                    b.Navigation("swipee");

                    b.Navigation("swiper");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.swipe_event", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.swipe", "swipe")
                        .WithMany("swipe_events")
                        .HasForeignKey("swipe_id")
                        .IsRequired()
                        .HasConstraintName("FK__swipe_eve__swipe__25518C17");

                    b.Navigation("swipe");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.transaction", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("transactions")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("FK__transacti__user___793DFFAF");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.trust_score", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithOne("trust_score")
                        .HasForeignKey("HumDo.Domain.Entities.trust_score", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__trust_sco__user___671F4F74");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_flag", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("user_flags")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__user_flag__user___634EBE90");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_interest", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.interest", "interest")
                        .WithMany("user_interests")
                        .HasForeignKey("interest_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_interests_interests");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("user_interests")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_interests_users");

                    b.Navigation("interest");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_language", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.language", "language")
                        .WithMany("user_languages")
                        .HasForeignKey("language_id")
                        .IsRequired()
                        .HasConstraintName("FK_user_languages_languages");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("user_languages")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_languages_users");

                    b.Navigation("language");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_photo", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("user_photos")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_photos_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_preference", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithOne("user_preference")
                        .HasForeignKey("HumDo.Domain.Entities.user_preference", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__user_pref__user___5070F446");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_profile", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.gender", "gender")
                        .WithMany("user_profiles")
                        .HasForeignKey("gender_id")
                        .HasConstraintName("FK__user_prof__gende__48CFD27E");

                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithOne("user_profile")
                        .HasForeignKey("HumDo.Domain.Entities.user_profile", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__user_prof__user___47DBAE45");

                    b.Navigation("gender");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_session", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("user_sessions")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_sessions_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_social_link", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("user_social_links")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_social_links_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user_verification", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.user", "user")
                        .WithMany("user_verifications")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_user_verifications_users");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.webhook_log", b =>
                {
                    b.HasOne("HumDo.Domain.Entities.third_party_integration", "integration")
                        .WithMany("webhook_logs")
                        .HasForeignKey("integration_id")
                        .HasConstraintName("FK__webhook_l__integ__40C49C62");

                    b.Navigation("integration");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.conversation", b =>
                {
                    b.Navigation("conversation_participants");

                    b.Navigation("messages");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.gender", b =>
                {
                    b.Navigation("user_profiles");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.interest", b =>
                {
                    b.Navigation("user_interests");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.language", b =>
                {
                    b.Navigation("user_languages");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.match", b =>
                {
                    b.Navigation("conversations");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.media_file", b =>
                {
                    b.Navigation("message_attachments");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.message", b =>
                {
                    b.Navigation("message_attachments");

                    b.Navigation("message_reactions");

                    b.Navigation("message_seen_events");

                    b.Navigation("reports");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.plan", b =>
                {
                    b.Navigation("subscriptions");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.report", b =>
                {
                    b.Navigation("report_reviews");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.swipe", b =>
                {
                    b.Navigation("swipe_events");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.third_party_integration", b =>
                {
                    b.Navigation("webhook_logs");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.transaction", b =>
                {
                    b.Navigation("invoices");
                });

            modelBuilder.Entity("HumDo.Domain.Entities.user", b =>
                {
                    b.Navigation("admin_actions");

                    b.Navigation("blockblockeds");

                    b.Navigation("blockblockers");

                    b.Navigation("boost_sessions");

                    b.Navigation("boosts");

                    b.Navigation("conversation_participants");

                    b.Navigation("conversations");

                    b.Navigation("daily_user_metrics");

                    b.Navigation("device_fingerprints");

                    b.Navigation("email_logs");

                    b.Navigation("feature_events");

                    b.Navigation("invoices");

                    b.Navigation("locations");

                    b.Navigation("login_attempts");

                    b.Navigation("match_scorecandidate_users");

                    b.Navigation("match_scoreusers");

                    b.Navigation("matchuser_aNavigations");

                    b.Navigation("matchuser_bNavigations");

                    b.Navigation("media_files");

                    b.Navigation("message_reactions");

                    b.Navigation("message_seen_events");

                    b.Navigation("messages");

                    b.Navigation("moderation_notes");

                    b.Navigation("notifications");

                    b.Navigation("password_resets");

                    b.Navigation("push_tokens");

                    b.Navigation("rate_limits");

                    b.Navigation("reportreported_users");

                    b.Navigation("reportreporters");

                    b.Navigation("sms_logs");

                    b.Navigation("subscriptions");

                    b.Navigation("swipeswipees");

                    b.Navigation("swipeswipers");

                    b.Navigation("transactions");

                    b.Navigation("trust_score");

                    b.Navigation("user_flags");

                    b.Navigation("user_interests");

                    b.Navigation("user_languages");

                    b.Navigation("user_photos");

                    b.Navigation("user_preference");

                    b.Navigation("user_profile");

                    b.Navigation("user_sessions");

                    b.Navigation("user_social_links");

                    b.Navigation("user_verifications");
                });
#pragma warning restore 612, 618
        }
    }
}
